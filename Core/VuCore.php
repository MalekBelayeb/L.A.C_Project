<?phpclass VuCore{    protected $v;    protected $compte;    protected $livre;    protected $aut;    /**     * @return mixed     */    public function getV()    {        return $this->v;    }    /**     * @param mixed $v     */    public function setV($v)    {        $this->v = $v;    }    /**     * @return mixed     */    public function getCompte()    {        return $this->compte;    }    /**     * @param mixed $compte     */    public function setCompte($compte)    {        $this->compte = $compte;    }    /**     * @return mixed     */    public function getLivre()    {        return $this->livre;    }    /**     * @param mixed $livre     */    public function setLivre($livre)    {        $this->livre = $livre;    }    /**     * @return mixed     */    public function getAut()    {        return $this->aut;    }    /**     * @param mixed $aut     */    public function setAut($aut)    {        $this->aut = $aut;    }    function marquerVU()    {        $requete=Connexion::getConnexion()->prepare("UPDATE vu SET VU=1 WHERE ID_COMPTE=:ID_C AND ID_LIVRE=:ID_L");        $requete->bindValue(':ID_C',$this->compte,PDO::PARAM_STR);        $requete->bindValue(':ID_L',$this->livre,PDO::PARAM_STR);        if($requete->execute())        {            return true;        }    }    function Existe($compte,$livre)    {        $c=Connexion::getConnexion();        $sql="select * from vu WHERE ID_COMPTE='$compte' AND ID_LIVRE='$livre' ";        try{            $liste=$c->query($sql);            if( $liste->rowCount()!=0)            {                return true;            }        }catch (PDOException $e)        {            die( "Echec de connexion".$e->getMessage());        }    }    function ajouterVu()    {        $requete=Connexion::getConnexion()->prepare("INSERT INTO vu VALUES(:ID_C,:ID_L,:ID_A,:VU)");        $requete->bindValue(':ID_C',$this->compte,PDO::PARAM_STR);        $requete->bindValue(':ID_L',$this->livre,PDO::PARAM_STR);        $requete->bindValue(':ID_A',$this->aut,PDO::PARAM_STR);        $requete->bindValue(':VU',1,PDO::PARAM_STR);        if($requete->execute())        {            return true;        }    }    function countVu()    {        $c=Connexion::getConnexion();        $sql="select * from vu WHERE ID_COMPTE='$this->compte' and ID_AUTEUR='$this->aut' ";        $liste=$c->query($sql);        return $liste->rowCount();    }    function countNonVu()    {        $c=Connexion::getConnexion();        $sql="select * from book WHERE AUTHOR='$this->aut' ";        $liste=$c->query($sql);        return $liste->rowCount();    }}